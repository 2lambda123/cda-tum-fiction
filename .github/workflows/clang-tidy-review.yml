name: ðŸš¨ â€¢ Clang-Tidy Review

on:
  pull_request:
    paths:
      - '**/*.hpp'
      - '**/*.cpp'
      - 'libs/**'
      - '.github/workflows/clang-tidy-review.yml'
      - '!bindings/pyfiction/include/pyfiction/pybind11_mkdoc_docstrings.hpp'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  clangtidy:
    runs-on: ubuntu-latest
    name: Clang-Tidy

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Review code with Clang-Tidy
        uses: ZedThree/clang-tidy-review@v0.19.0
        id: review
        with:
          cmake_command: >
            cmake . -B build
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
            -DFICTION_CLI=ON
            -DFICTION_TEST=ON
            -DFICTION_BENCHMARK=OFF
            -DFICTION_EXPERIMENTS=ON
            -DMOCKTURTLE_EXAMPLES=OFF
          build_dir: build
          apt_packages: 'libreadline-dev,libtbb-dev'
          config_file: '.clang-tidy'
          exclude: 'libs/*,docs/*,benchmarks/*,bib/*,*/pyfiction/pybind11_mkdoc_docstrings.hpp,*/pyfiction/documentation.hpp'
          split_workflow: true

      - name: Make sure that the review file exists
        id: check-review-output
        uses: andstor/file-existence-action@v3.0.0
        with:
          files: 'clang-tidy-review-output.json'
          ignore_case: true

      - name: Upload review artifact
        uses: actions/upload-artifact@v4
        with:
          name: clang-tidy-review
          path: |
            clang-tidy-review-output.json
            clang-tidy-review-metadata.json

  post-review:
    needs: clangtidy
    runs-on: ubuntu-latest
    name: Post Clang-Tidy Review

    steps:
      # Download the artifact uploaded by the lint action
      - name: Download Clang-Tidy artifact
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
            });
            const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "clang-tidy-review"
            })[0];
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/clang-tidy-review.zip', Buffer.from(download.data));

      # Unzip the artifact
      - name: Unzip artifact
        run: unzip clang-tidy-review.zip

      # Posts the comments
      - name: Post review comments
        id: post-review
        uses: ZedThree/clang-tidy-review/post@v0.19.0

      # If there are any comments, fail the check
      - if: steps.post-review.outputs.total_comments > 0
        run: exit 1
